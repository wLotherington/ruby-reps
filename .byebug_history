continue
quit
continue
card
continue
card["rep_id"]
continue
card["rep_id"]
card
continue
card
continue
card
continue
card
continue
card
continue
card
sm2
card['next_repetition_date']
card[next_repetition_date]
card
sm2
continue
sm2.next_repetition_date
sm2.methods
sm2
sm2.repetition_date
sm2
continue
sm2.interval
sm2.methods
sm2[@prev_interval]
sm2
continue
sm2.repetition_date
sm2
sm2[@repetition_date]
sm2
continue
session[:user_id]
current_user
sm2[prev_interval]
sm2.@prev_interval
sm2.prev_interval
sm2
continue
sm2
continue
sm2
continue
Sm2.new()
card_data
params
continue
card_data
continue
reps
continue
reps[0]
reps
continue
result.first
result
continue
result.map { tuple| 1 }
result.map { |tuple| 1 }
result
continue
result.first
result
continue
session[:user_id]
session
continue
session
continue
card
result.first
result
card
continue
card
continue
eval(script)
script = JSON.parse(request.body.read)['code']
params
continue
test
test = eval('"test"')
eval("puts 'hi'")
params
continue
session[:username]
session
continue
session
continue
@user
continue
@user
continue
user_params
continue
user_params
continue
@user.id
@user
continue
params
continue
@user.errors
@user.save
@user
continue
user.username
user
continue
@user.save
@user
continue
@user.save
@user
continue
@user
@user.save
@user
continue
@user
continue
user
continue
db
@db
continue
DB.new
DB
@db
continue
@user
@db
continue
@user.save
@user.valid?
continue
@user.
@user.valid?
continue
@user.errors
@user.valid?
@user
continue
@user.errors
@user.valid?
continue
@user.save
@user.valid?
@user
continue
@user.valid?
@user
continue
@user.valid?
@user
continue
@user.save
@user
continue
@user.errors
@user.invitation
@user
continue
@user
continue
@user.errors
@user.username
@user
continue
@user
continue
@user.errors
@user
continue
@user.methods
@user.errors
@user
continue
@user.errors
@user
continue
params
continue
test
continue
params
